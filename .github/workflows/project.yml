run-name: Project automate

on:
  issues: 
    types: ['opened', 'reopened']
  
  pull_request: 
    types: ['opened', 'reopened']

jobs:
  add-to-project:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        id: checkout-repo
        uses: actions/checkout@v4

      - name: Add issue to project
        id: add-issue-to-project
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.ACCESS_TOKEN }}
          script: |
            // Query project number and find issue project count
            const resp = await github.graphql(`{
              organization(login:"${{ github.repository_owner }}") {
                projectsV2(first: 10) {
                  nodes {
                    number,
                    title
                  }
                }
              },
              repository(owner:"${{ github.repository_owner }}", name:"${{ github.event.repository.name }}") {
                issue(number: ${{ github.event.issue.number }}) {
                  projectItems(first: 10) {
                    totalCount
                  }
                }
              }
            }`)
            
            // Total project count this issue is added to
            const totalCount = resp.repository.issue.projectItems.totalCount
            if( totalCount > 0 ) {
              console.log("Issue is alredy added into project");
              return
            }
            // Get project node to filter project number
            const prj_node = resp.organization.projectsV2.filter((node) => node.title === ${{ vars.MAIN_PRJ }})
            if( prj_node.length === 0 ) {
              console.log("Project with name: ${{ vars.MAIN_PRJ }} not found.");
              return
            }
            const prj_number = prj_node[0].number
            console.log("project number: ", prj_number)

      - name: Print context
        if: always()
        run: echo ${{ toJSON(github) }}
