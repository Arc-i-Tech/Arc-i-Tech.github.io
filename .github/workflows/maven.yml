run-name: Maven build by event- '${{ github.event_name }}/${{ github.event.number }}/${{ github.event.action }}'' on branch- '${{ github.base_ref }}' by user- '${{ github.actor }}'
on:
  repository_dispatch: # To support manual trigger.
  push:
    branches: [development, '*-E-*']
  pull_request: 
    branches: [development, '*-E-*'] 
    types: [opened, synchronize]

jobs:
  # Add project, Asign reviewer
  maven-build-pkg-creation:
    runs-on: ubuntu-latest
    steps:
      - id: checkout-repo
        name: Checkout repository
        uses: actions/checkout@v4

      - id: setup-java
        name: Setup Java 
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 1.8.0.392+8     
        
      - id: run-mvn-pkg
        name: Run maven
        run: mvn package
        
      - id: commit-binary-artifact
        name: Commit binary artifact
        if: github.event_name == 'push' && github.ref_name == 'development'
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actor
          message: Mevan package from github action- ${{ github.run_number }} triggred by- @${{ github.actor }}
        
      - id: create-pr-to-test
        name: Create pull request to test branch
        if: github.event_name == 'push' && github.ref_name == 'development'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: github.ref_name,
              base: 'test',
              title: "Push Test",
              body: "PR created from push to **development**"
            })

      - id: add-comment-to-pr
        name: Add Comment to pull request - ${{ github.event.number }}
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "The job- **${{ github.job }}** is executed successfully!"
            }) |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['success']
            })

      - id: handle-failure
        name: Find failed step
        if: failure()
        uses: dkershner6/switch-case-action@v1
        with:
          default: "NaN"
          conditionals-with-values: |
            ${{ steps.checkout-repo.outcome != 'success' && steps.checkout-repo.outcome != 'skipped' }} => checkout-repo
            ${{ steps.setup-java.outcome != 'success'  && steps.setup-java.outcome != 'skipped' }} => setup-java
            ${{ steps.run-mvn-pkg.outcome != 'success' && steps.run-mvn-pkg.outcome != 'skipped' }} => run-mvn-pkg
            ${{ steps.commit-binary-artifact.outcome != 'success' && steps.commit-binary-artifact.outcome != 'skipped' }} => commit-binary-artifact
            ${{ steps.create-pr-to-test.outcome != 'success' && steps.create-pr-to-test.outcome != 'skipped' }} => create-pr-to-test
            ${{ steps.add-comment-to-pr.outcome != 'success' && steps.add-comment-to-pr.outcome != 'skipped' }} => add-comment-to-pr

      - id: handle-failure-pr
        name: Failed step info
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.pulls.createReviewComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              body: "The job- **${{ github.job }}** has failed at step- **${{ steps.handle-failure.outputs.value }}**",
              commit_id: '*',
              path: '*'
            }) |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['failed']
            })  
      
      - id: handle-failure-push
        name: Push - base branch:github.ref_name
        if: failure() && github.event_name == 'push' && github.ref_name == 'development'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "The job- **${{ github.job }}** is **failed** on push to branch- **${{ github.ref_name }}**",
              body: "",
              assignee: "",
              labels: ["failed", "urgent"]
            })

      - id: success-message
        name: Success message
        if: success()
        run: echo Action completed successfully.

      - id: print-message
        name: Print message
        if: always()
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: gh run view ${{ github.run_id }} 
         # echo "{{ toJSON(github) }}"
        shell: bash

  # Epic failure comment